*** contrib/mod_sql.c.orig      2017-01-16 01:53:41.000000000 +0100
--- contrib/mod_sql.c   2017-03-11 15:15:40.845610019 +0100
*************** static modret_t *sql_auth_openssl(cmd_re
*** 815,820 ****
--- 815,876 ----

    return PR_ERROR_INT(cmd, PR_AUTH_BADPWD);
  }
+
+
+ static modret_t *sql_auth_mysql_password(cmd_rec *cmd, const char *plaintext,
+     const char *ciphertext) {
+
+   /* The ciphertext argument is a combined digest name and hashed value, of
+    * the form "{digest}hash".
+    */
+
+   EVP_MD_CTX *md_ctx;
+   const EVP_MD *md;
+
+   unsigned char buf[EVP_MAX_MD_SIZE*2+1], mdval_tmp[EVP_MAX_MD_SIZE], mdval_final[EVP_MAX_MD_SIZE];
+   unsigned int mdlen;
+
+   char *hashvalue;   /* ptr to hashed value we're comparing to */
+   int i;
+
+   if (ciphertext[0] != '*') {
+     sql_log(DEBUG_WARN, "%s", "syntax error in password hash");
+     return PR_ERROR_INT(cmd, PR_AUTH_BADPWD);
+   }
+
+   hashvalue = (char*)ciphertext + 1;
+
+   OpenSSL_add_all_digests();
+
+   md = EVP_get_digestbyname("sha1");
+   if (md == NULL) {
+     sql_log(DEBUG_WARN, "sha1 digest is not supported");
+     return PR_ERROR_INT(cmd, PR_AUTH_BADPWD);
+   }
+
+   md_ctx = EVP_MD_CTX_create();
+   EVP_DigestInit(md_ctx, md);
+   EVP_DigestUpdate(md_ctx, plaintext, strlen(plaintext));
+   EVP_DigestFinal(md_ctx, mdval_tmp, &mdlen);
+   EVP_MD_CTX_destroy(md_ctx);
+
+   md_ctx = EVP_MD_CTX_create();
+   EVP_DigestInit(md_ctx, md);
+   EVP_DigestUpdate(md_ctx, mdval_tmp, mdlen);
+   EVP_DigestFinal(md_ctx, mdval_final, &mdlen);
+   EVP_MD_CTX_destroy(md_ctx);
+
+   memset(buf, '\0', sizeof(buf));
+
+   for(i = 0; i < mdlen; i++)
+     sprintf((char*)buf + (i * 2), "%02X", mdval_final[i]);
+
+   if (strcmp((char *) buf, hashvalue) == 0) {
+     return PR_HANDLED(cmd);
+   }
+
+   return PR_ERROR_INT(cmd, PR_AUTH_BADPWD);
+ }
  #endif

  struct sql_authtype_handler {
*************** static void sql_mod_unload_ev(const void
*** 6944,6949 ****
--- 7000,7006 ----

  #if defined(HAVE_OPENSSL) || defined(PR_USE_OPENSSL)
      (void) sql_unregister_authtype("OpenSSL");
+     (void) sql_unregister_authtype("MysqlPassword");
  #endif /* HAVE_OPENSSL */

      close(sql_logfd);
*************** static int sql_init(void) {
*** 7036,7041 ****
--- 7093,7099 ----

  #if defined(HAVE_OPENSSL) || defined(PR_USE_OPENSSL)
    (void) sql_register_authtype("OpenSSL", sql_auth_openssl);
+   (void) sql_register_authtype("MysqlPassword", sql_auth_mysql_password);
  #endif /* HAVE_OPENSSL */

    return 0;
